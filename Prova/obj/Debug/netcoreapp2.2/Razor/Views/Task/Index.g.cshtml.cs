#pragma checksum "C:\Projetos\Prova\Prova\Prova\Views\Task\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "101d10db1b3e080dca93e0d2e032f05ab900f44f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Task_Index), @"mvc.1.0.view", @"/Views/Task/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Task/Index.cshtml", typeof(AspNetCore.Views_Task_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"101d10db1b3e080dca93e0d2e032f05ab900f44f", @"/Views/Task/Index.cshtml")]
    public class Views_Task_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Projetos\Prova\Prova\Prova\Views\Task\Index.cshtml"
  
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
            BeginContext(54, 966, true);
            WriteLiteral(@"
<div class=""card mb-3"">
    <div class=""card-header"">
        Tarefas
    </div>
    <div class=""card-body"">
        <div id=""success"" class=""alert alert-success"" style=""display:none;"">
            <strong>Sucesso!</strong> Item removido.
        </div>
        <div id=""errors"" class=""alert alert-danger"" style=""display:none;"">
            <strong>Erro!</strong>
        </div>
        <div class=""table-responsive"">
            <table class=""table table-bordered"" id=""tableTasks"" width=""100%"" cellspacing=""0"">
                <thead>
                    <tr>
                        <th>TÃ­tulo</th>
                        <th>Criado em</th>
                        <th>Modificado em</th>
                        <th>Status</th>
                        <th></th>
                        <th></th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
</div>
");
            EndContext();
            DefineSection("ScriptsReady", async() => {
                BeginContext(1042, 320, true);
                WriteLiteral(@"
    <script type=""text/javascript"">
        var enumStatus = {
            New: 1,
            ToDo: 2,
            Doing: 3,
            Stopped: 4,
            Reopened: 5,
            Done: 6,
            Removed: 7
        };

        getTasks();

        function edit(id) {
             var url = """);
                EndContext();
                BeginContext(1363, 26, false);
#line 48 "C:\Projetos\Prova\Prova\Prova\Views\Task\Index.cshtml"
                   Write(Url.Action("Edit", "Task"));

#line default
#line hidden
                EndContext();
                BeginContext(1389, 4236, true);
                WriteLiteral(@""";
            window.location = url + ""?Id="" + id;
        }

        function remove(id) {
            $.post('/Task/Remove/', {Id: id},
                function (data) {
                    if (data.ok) {
                        $(""#success"").show();
                        getTasks();
                    }
                    else {
                        $(data.errors).each(function (erro) {
                            $(""#errors"").append(this.message + ""<br/>"")
                        });
                        $(""#errors"").show();
                    }
                });
        }

        function getStatusName(status) {
            switch (status) {
                case enumStatus.New:
                    return ""Novo"";
                    break;
                case enumStatus.ToDo:
                    return ""Para Fazer"";
                    break;
                case enumStatus.Doing:
                    return ""Fazendo"";
                    break;
              ");
                WriteLiteral(@"  case enumStatus.Stopped:
                    return ""Parado"";
                    break;
                case enumStatus.Reopened:
                    return ""Reaberto"";
                    break;
                case enumStatus.Done:
                    return ""Pronto"";
                    break;
                case enumStatus.Removed:
                    return ""Removido"";
                    break;
            }
        }

        function dataFormatada(date) {
            var data = new Date(date),
                dia = data.getDate().toString(),
                diaF = (dia.length == 1) ? '0' + dia : dia,
                mes = (data.getMonth() + 1).toString(),
                mesF = (mes.length == 1) ? '0' + mes : mes,
                anoF = data.getFullYear(),
                hour = data.getHours(),
                minutes = data.getMinutes(),
                seconds = data.getSeconds();

            return diaF + ""/"" + mesF + ""/"" + anoF + "" "" + hour.toString().padStart(2, ""0");
                WriteLiteral(@""") + "":"" + minutes + "":"" + seconds;
        }

        function getTasks() {
            $.get('/Home/GetAll/',
                function (data) {

                    list = JSON.parse(data.result);

                    $(""#tableTasks"").dataTable().fnDestroy();

                    $('#tableTasks').DataTable({
                        data: list,
                        columns: [
                            { data: 'Title' },
                            {
                                data: 'CreatedDate',
                                render: function (data) {

                                    return dataFormatada(data);
                                }
                            },
                            {
                                data: 'ModifiedDate',
                                render: function (data) {
                                    return dataFormatada(data);
                                }
                            },
                        ");
                WriteLiteral(@"    {
                                data: 'Status',
                                render: function (data) {
                                    return getStatusName(data);
                                }
                            },
                            {
                                data: 'Id',
                                render: function (data) {
                                    return '<a class=""btn btn-primary"" title=""Editar"" onclick=""edit(\'' + data + '\')""><i class=""fa fa-pencil-alt""></i></a>'
                                },
                                orderable: false
                            },
                            {
                                data: 'Id',
                                render: function (data) {
                                    return '<a class=""btn btn-danger"" title=""Remover"" onclick=""remove(\'' + data + '\')""><i class=""fa fa-trash""></i></a>'
                                },
                                orderabl");
                WriteLiteral("e: false\r\n                            }\r\n                        ]\r\n                    });\r\n                });\r\n        }\r\n    </script>\r\n");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
